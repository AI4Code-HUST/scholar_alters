{"title": "Signature in Code Backdoor Detection, how far are we?", "first_label": ["Code"], "second_label": ["Detection"], "data": "QH Le, T Le-Cong, B Le, B Xu- arXiv preprint arXiv:2510.13992, 2025\nAs Large Language Models (LLMs) become increasingly integrated into software \ndevelopment workflows, they also become prime targets for adversarial attacks. \nAmong these, backdoor attacks are a significant threat, allowing attackers to\n\u00a0\nThis message was sent by Google Scholar because you're following new articles written by \nBach Le\n.\nList alerts\nCancel alert", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.13992&hl=en&sa=X&d=9067708832514091256&ei=wR_4aOupI_rUieoPvMbB8Qc&scisig=AAZF9b_JLMNW9dl9RwxW4hCMmJhW&oi=scholaralrt&hist=ylyK0_8AAAAJ:7720112214409400523:AAZF9b-xyICIzdumGrWFv_NMdYHE&html=&pos=0&folt=art", "author": ["Bach Le"], "ref": ["Bach Le - new articles", "2 new citations to articles by Thanh Le-Cong", "David Lo - new related research", "Xin ZHOU - new related research", "Thanh Le-Cong - new articles", "10 new citations to articles by Abhik Roychoudhury", "2 new citations to articles by Bach Le", "2 new citations to articles by Hong Jin Kang"]}
{"title": "A11YN: aligning LLMs for accessible web UI code generation", "first_label": ["LLM", "Code"], "second_label": ["Generation"], "data": "J Yoon, J Cho, J Kim, J Chung, J Jeon, Y Yu- arXiv preprint arXiv:2510.13914, 2025\nLarge language models (LLMs) have recently demonstrated strong capabilities in \ngenerating functional and aesthetic web interfaces directly from instructions. \nHowever, these models often replicate accessibility flaws from their training data, \nresulting in interfaces that exclude users with diverse needs and contexts. To \naddress this gap, we introduce A11yn, the first method that aligns code-generating \nLLMs to reliably produce accessibility-compliant web UIs. A11yn optimizes a novel\nCites: Usability and aesthetics: Better together for automated repair of", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.13914&hl=en&sa=X&d=7346817179217164407&ei=vx_4aOeJLJjO6rQPk_O3wAE&scisig=AAZF9b9DLyLFRAcw9-_z5yJXPXSZ&oi=scholaralrt&hist=ylyK0_8AAAAJ:1164437029242115036:AAZF9b9cZXgBuh9nrxFB6U5Br4kf&html=&pos=0&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["2 new citations to articles by Thanh Le-Cong", "2 new citations to articles by Bach Le"]}
{"title": "R1-Fuzz: Specializing Language Models for Textual Fuzzing via Reinforcement Learning", "first_label": ["LLM", "Fuzzing"], "second_label": [], "data": "J Lin, L Su, J Li, C Qian- arXiv preprint arXiv:2509.20384, 2025\nFuzzing is effective for vulnerability discovery but struggles with complex targets such \nas compilers, interpreters, and database engines, which accept textual input that \nmust satisfy intricate syntactic and semantic constraints. Although language models", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.20384&hl=en&sa=X&d=1649136629077213896&ei=wR_4aLPoFNWY6rQPrbXRgQY&scisig=AAZF9b9A_fC3MFUyhQ5sK9VXroDy&oi=scholaralrt&hist=ylyK0_8AAAAJ:5865787842749446205:AAZF9b9CiGf-firBvlixUlAEJTz9&html=&pos=0&folt=rel", "author": ["David Lo"], "ref": ["David Lo - new related research", "Thanh Le-Cong - new related research"]}
{"title": "E2Edev: Benchmarking Large Language Models in End-to-End Software Development Task", "first_label": ["LLM"], "second_label": [], "data": "J Liu, C Huang, Z Guan, W Lei, Y Deng- arXiv preprint arXiv:2510.14509, 2025\nE2EDev comprises (i) a fine-grained set of user requirements,(ii){multiple BDD test \nscenarios with corresponding Python step implementations for each requirement}, \nand (iii) a fully automated testing pipeline built on the Behave framework. To ensure", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.14509&hl=en&sa=X&d=15900279319022234305&ei=wR_4aLPoFNWY6rQPrbXRgQY&scisig=AAZF9b-slRTIPFUy1BphkG4z79pS&oi=scholaralrt&hist=ylyK0_8AAAAJ:5865787842749446205:AAZF9b9CiGf-firBvlixUlAEJTz9&html=&pos=1&folt=rel", "author": ["David Lo"], "ref": ["David Lo - new related research", "Xin ZHOU - new related research", "Abhik Roychoudhury - new related research"]}
{"title": "A machine learning approach to vulnerability detection combining software metrics and topic modelling: Evidence from smart contracts", "first_label": ["Vulnerabilities", "Smart Contracts"], "second_label": ["Detection"], "data": "G Ibba, R Neykova, M Ortu, R Tonelli, S Counsell- Machine Learning with, 2025\nThis paper introduces a methodology for software vulnerability detection that \ncombines structural and semantic analysis through software metrics and topic \nmodelling. We evaluate the approach using smart contracts as a case study, focusing", "link": "https://scholar.google.com/scholar_url?url=https://www.sciencedirect.com/science/article/pii/S2666827025001422&hl=en&sa=X&d=18134780674166341757&ei=wR_4aLPoFNWY6rQPrbXRgQY&scisig=AAZF9b-cRpRc-n1vC3Wx8S67ortE&oi=scholaralrt&hist=ylyK0_8AAAAJ:5865787842749446205:AAZF9b9CiGf-firBvlixUlAEJTz9&html=&pos=3&folt=rel", "author": ["David Lo"], "ref": ["David Lo - new related research", "Quang-Cuong Bui - new related research", "Hong Jin Kang - new related research"]}
{"title": "DamFlow: Preventing a Flood of Irrelevant Data Flows in Android Apps", "first_label": ["Static Analysis"], "second_label": [], "data": "M Alecci, J Samhi, M Miltenberger, S Arzt- ACM Transactions on, 2025\nState-of-the-art tools like FlowDroid have been proposed to detect data leaks in \nAndroid apps, but two main challenges persist:  false alarms and  undetected \ndata leaks. One contributing factor to these challenges is that a tool such as", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3772002&hl=en&sa=X&d=2501993862817038890&ei=wR_4aLPoFNWY6rQPrbXRgQY&scisig=AAZF9b_gkhIWcw58mq-YwFMte_6h&oi=scholaralrt&hist=ylyK0_8AAAAJ:5865787842749446205:AAZF9b9CiGf-firBvlixUlAEJTz9&html=&pos=4&folt=rel", "author": ["David Lo"], "ref": ["David Lo - new related research", "Hong Jin Kang - new related research"]}
{"title": "Graph neural networks for precise bug localization through structural program analysis", "first_label": ["Bug"], "second_label": ["Localization", "Graph"], "data": "L Yousofvand, S Soleimani, V Rafe, A Nikanjam- Automated Software Engineering, 2026\nBug localization (BL) is known as one of the major steps in the program repair \nprocess, which generally seeks to find a set of commands causing a program to \ncrash or fail. At the present time, locating bugs and their sources quickly seems to be\n\u00a0\nThis message was sent by Google Scholar because you're following new articles related to research by \nDavid Lo\n.\nList alerts\nCancel alert", "link": "https://scholar.google.com/scholar_url?url=https://link.springer.com/article/10.1007/s10515-025-00556-y&hl=en&sa=X&d=17248062499908466361&ei=wR_4aLPoFNWY6rQPrbXRgQY&scisig=AAZF9b9CtKOSHU4PHQ95OFzeS2YO&oi=scholaralrt&hist=ylyK0_8AAAAJ:5865787842749446205:AAZF9b9CiGf-firBvlixUlAEJTz9&html=&pos=5&folt=rel", "author": ["David Lo"], "ref": ["David Lo - new related research"]}
{"title": "CodeDiffuSe: A masked diffusion framework for structure-aware code completion and repair", "first_label": ["Code"], "second_label": ["Repair", "Generation"], "data": "A Onan, HA Alhumyani- Journal of King Saud University Computer and, 2025\nCode completion and code repair have become fundamental tasks in software \nengineering and machine learning research. However, existing large language \nmodels (LLMs) for code generation, predominantly based on autoregressive", "link": "https://scholar.google.com/scholar_url?url=https://link.springer.com/article/10.1007/s44443-025-00237-6&hl=en&sa=X&d=7004051865866003393&ei=wx_4aMmqBbeO6rQP6NHlsQ0&scisig=AAZF9b_qwM9Dp6AHPQxBEC9VHMMl&oi=scholaralrt&hist=ylyK0_8AAAAJ:16898579961534012346:AAZF9b8mlk_JgC2UbDdCdga5r9UH&html=&pos=0&folt=rel", "author": ["Xin ZHOU"], "ref": ["Xin ZHOU - new related research"]}
{"title": "The Question Neighbourhood Approach for Systematic Evaluation of Code-Generating LLMs", "first_label": ["LLM", "Code"], "second_label": [], "data": "S Honarvar, M Rei, A Donaldson- IEEE Transactions on Software Engineering, 2025\nWe present the concept of a question neighbourhood for systematically evaluating \ninstruction-tuned large language models (LLMs) for code generation via a new \nbenchmark, Turbulence. Turbulence consists of a large set of natural language", "link": "https://scholar.google.com/scholar_url?url=https://ieeexplore.ieee.org/abstract/document/11175086/&hl=en&sa=X&d=12331338329639325411&ei=wx_4aMmqBbeO6rQP6NHlsQ0&scisig=AAZF9b8Ies8RuQhW4d_WHfainK40&oi=scholaralrt&hist=ylyK0_8AAAAJ:16898579961534012346:AAZF9b8mlk_JgC2UbDdCdga5r9UH&html=&pos=1&folt=rel", "author": ["Xin ZHOU"], "ref": ["Xin ZHOU - new related research"]}
{"title": "Enhancing LLM-based Fault Localization with a Functionality-Aware Retrieval-Augmented Generation Framework", "first_label": ["LLM", "Fault Localization"], "second_label": ["Generation", "Localization"], "data": "X Shi, Z Li, AR Chen- arXiv preprint arXiv:2509.20552, 2025\nFault localization (FL) is a critical but time-consuming task in software debugging, \naiming to identify faulty code elements. While recent advances in large language \nmodels (LLMs) have shown promise for FL, they often struggle with complex systems", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.20552&hl=en&sa=X&d=538936030362850881&ei=wx_4aMmqBbeO6rQP6NHlsQ0&scisig=AAZF9b_pS5txVadTljqov2Cyxur_&oi=scholaralrt&hist=ylyK0_8AAAAJ:16898579961534012346:AAZF9b8mlk_JgC2UbDdCdga5r9UH&html=&pos=2&folt=rel", "author": ["Xin ZHOU"], "ref": ["Xin ZHOU - new related research"]}
{"title": "Source Code Guardrail: AI Driven Solution to Distinguish Critical vs. Generic Code for Enterprise LLM Security", "first_label": ["LLM", "Code"], "second_label": [], "data": "R Sharma, A Gupta- International Conference on Provable Security, 2025\nAbstract The adoption of Large Language Models (LLMs) in businesses raises the \npossibility of inadvertent intellectual property (IP) and secret data leaks to public \nartificial intelligence systems. Organizations are using security solutions, including", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/abs/10.1007/978-981-95-2961-2_23&hl=en&sa=X&d=5184326828152072441&ei=wx_4aMmqBbeO6rQP6NHlsQ0&scisig=AAZF9b_DHHxlXXvwx7KOr1GLjYsY&oi=scholaralrt&hist=ylyK0_8AAAAJ:16898579961534012346:AAZF9b8mlk_JgC2UbDdCdga5r9UH&html=&pos=4&folt=rel", "author": ["Xin ZHOU"], "ref": ["Xin ZHOU - new related research", "Quang-Cuong Bui - new related research", "Bach Le - new related research"]}
{"title": "Blending Language Models and Domain-Specific Languages in Computer Science Education. A Case Study on API RESTFul", "first_label": ["LLM"], "second_label": [], "data": "F Jurado, FD Rodrguez, E Chavarriaga, L Rojas- International Journal of Interactive, 2025\nAbstract Since Computer Science students are used to applying both General \nPurpose Programming Languages (GPPLs) and Domain-Specific Languages \n(DSLs), Generative Artificial Intelligence based on Language Models (LMs) can help\n\u00a0\nThis message was sent by Google Scholar because you're following new articles related to research by \nXin ZHOU\n.\nList alerts\nCancel alert", "link": "https://scholar.google.com/scholar_url?url=https://revistas.unir.net/index.php/ijimai/article/view/890&hl=en&sa=X&d=10479196726541786525&ei=wx_4aMmqBbeO6rQP6NHlsQ0&scisig=AAZF9b9HVc-l6hnmEPdBJg3N4Vo6&oi=scholaralrt&hist=ylyK0_8AAAAJ:16898579961534012346:AAZF9b8mlk_JgC2UbDdCdga5r9UH&html=&pos=6&folt=rel", "author": ["Xin ZHOU"], "ref": ["Xin ZHOU - new related research"]}
{"title": "PathFix: Automated Program Repair with Expected Path", "first_label": ["APR"], "second_label": ["Repair"], "data": "X He, S Wang, K Sun- arXiv preprint arXiv:2510.14341, 2025\nAutomated program repair (APR) techniques are effective in fixing inevitable defects \nin software, enhancing development efficiency and software robustness. However, \ndue to the difficulty of generating precise specifications, existing APR methods face", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.14341&hl=en&sa=X&d=15132899681148259377&ei=wh_4aL6pAoeVieoP9e_euQw&scisig=AAZF9b9YW4kFYhNqwb3ditygfL-4&oi=scholaralrt&hist=ylyK0_8AAAAJ:11088443020050739259:AAZF9b_dlaF_l6JD6R93aQP1v_a_&html=&pos=0&folt=rel", "author": ["Quang-Cuong Bui"], "ref": ["Quang-Cuong Bui - new related research", "Thanh Le-Cong - new related research", "Bach Le - new related research", "10 new citations to articles by Abhik Roychoudhury"]}
{"title": "Cloud Security: Managing Emerging Threats", "first_label": [], "second_label": [], "data": "A Chowdhary, A Sabur - 2025\nThe book reviews the zero-trust model that deviates from the traditional definition of \ntrust boundaries and validates all interactions in a cloud environment. The incident \nresponse life cycle is used to prepare for, identify, contain, and eradicate security", "link": "https://scholar.google.com/scholar_url?url=https://books.google.com/books%3Fhl%3Den%26lr%3Dlang_en%26id%3Dj6iPEQAAQBAJ%26oi%3Dfnd%26pg%3DPT18%26ots%3DYEyqmpsFdt%26sig%3Dr6RL-6x00S9xfHZN74YQGcI-kcs&hl=en&sa=X&d=13563439903056895648&ei=wh_4aL6pAoeVieoP9e_euQw&scisig=AAZF9b91wjWScI7EHHa3MQ5_cWHG&oi=scholaralrt&hist=ylyK0_8AAAAJ:11088443020050739259:AAZF9b_dlaF_l6JD6R93aQP1v_a_&html=&pos=2&folt=rel", "author": ["Quang-Cuong Bui"], "ref": ["Quang-Cuong Bui - new related research"]}
{"title": "Vdexplainer: Sequential decision-making and probability sampling guided statement-level explanation for vulnerability detection", "first_label": ["Vulnerabilities"], "second_label": ["Detection"], "data": "W Zheng, X Su, Y Jiang, H Wei, W Tao- Computers & Security, 2025\nMost existing deep learning (DL) based vulnerability detection methods, including \npre-trained models, are coarse-grained binary classification methods that lack the \ninterpretability for detection results. Although the explanation of deep learning has", "link": "https://scholar.google.com/scholar_url?url=https://www.sciencedirect.com/science/article/pii/S0167404825003591&hl=en&sa=X&d=1218753570899613844&ei=wB_4aJeBI97M6rQPpPXkqAI&scisig=AAZF9b-Gvd82yXjuXXps0NDpxzwO&oi=scholaralrt&hist=ylyK0_8AAAAJ:4812769200119993430:AAZF9b_1MT--9phVV-34dqGZeQFI&html=&pos=1&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - new related research"]}
{"title": "MAVUL: Multi-Agent Vulnerability Detection via Contextual Reasoning and Interactive Refinement", "first_label": ["Vulnerabilities"], "second_label": ["Detection", "Agent", "Reasoning"], "data": "Y Li, K Joshi, X Wang, E Wong- arXiv preprint arXiv:2510.00317, 2025\nThe widespread adoption of open-source software (OSS) necessitates the mitigation \nof vulnerability risks. Most vulnerability detection (VD) methods are limited by \ninadequate contextual understanding, restrictive single-round interactions, and", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.00317&hl=en&sa=X&d=577185325914480253&ei=wB_4aJeBI97M6rQPpPXkqAI&scisig=AAZF9b9zhj17R2ND7E9Z8TAf0EMX&oi=scholaralrt&hist=ylyK0_8AAAAJ:4812769200119993430:AAZF9b_1MT--9phVV-34dqGZeQFI&html=&pos=2&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - new related research"]}
{"title": "A Scalable Vulnerability Detection System with Multi-View Graph Representations", "first_label": ["Vulnerabilities"], "second_label": ["Detection", "Graph"], "data": "S Dou, H Zheng, J Shan, Y Wu, D Zou, X Huang, Y Liu- ACM Transactions on, 2025\nDeep learning (DL) has been extensively utilized in source code vulnerability \ndetection due to its robust automatic feature extraction capabilities. To achieve \nscalable vulnerability scanning, some prior studies intend to process the source code", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3770075&hl=en&sa=X&d=14953216934661661615&ei=wB_4aJeBI97M6rQPpPXkqAI&scisig=AAZF9b-mdJedTULsxLZv6yXH09xW&oi=scholaralrt&hist=ylyK0_8AAAAJ:4812769200119993430:AAZF9b_1MT--9phVV-34dqGZeQFI&html=&pos=3&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - new related research"]}
{"title": "On the Soundness and Consistency of LLM Agents for Executing Test Cases Written in Natural Language", "first_label": ["LLM", "Software Testing"], "second_label": ["Agent"], "data": "S Salva, R Taguelmimt- arXiv preprint arXiv:2509.19136, 2025\nThe use of natural language (NL) test cases for validating graphical user interface \n(GUI) applications is emerging as a promising direction to manually written \nexecutable test scripts, which are costly to develop and difficult to maintain. Recent", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.19136&hl=en&sa=X&d=14763218273592887225&ei=wB_4aJeBI97M6rQPpPXkqAI&scisig=AAZF9b-UHW8cguy7BjMGIC6z7CK9&oi=scholaralrt&hist=ylyK0_8AAAAJ:4812769200119993430:AAZF9b_1MT--9phVV-34dqGZeQFI&html=&pos=4&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - new related research"]}
{"title": "ALMAS: an autonomous llm-based multi-agent software engineering framework", "first_label": ["LLM"], "second_label": ["Agent"], "data": "V Tawosi, K Ramani, S Alamir, X Liu- arXiv preprint arXiv:2510.03463, 2025\nMulti-agent Large Language Model (LLM) systems have been leading the way in \napplied LLM research across a number of fields. One notable area is software \ndevelopment, where researchers have advanced the automation of code", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.03463&hl=en&sa=X&d=6189494284468520954&ei=wB_4aJeBI97M6rQPpPXkqAI&scisig=AAZF9b8zKTPWNRtbnL5YxBMg92_V&oi=scholaralrt&hist=ylyK0_8AAAAJ:4812769200119993430:AAZF9b_1MT--9phVV-34dqGZeQFI&html=&pos=5&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - new related research"]}
{"title": "Towards Human-interpretable Explanation in Code Clone Detection using LLM-based Post Hoc Explainer", "first_label": ["LLM", "Code"], "second_label": ["Detection"], "data": "T Racharak, C Ragkhitwetsagul, C Junplong- arXiv preprint arXiv, 2025\nRecent studies highlight various machine learning (ML)-based techniques for code \nclone detection, which can be integrated into developer tools such as static code \nanalysis. With the advancements brought by ML in code understanding, ML-based", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.22978&hl=en&sa=X&d=13116222657243354012&ei=wB_4aJeBI97M6rQPpPXkqAI&scisig=AAZF9b-CrNTuw-vA-xt9R-PWj2rN&oi=scholaralrt&hist=ylyK0_8AAAAJ:4812769200119993430:AAZF9b_1MT--9phVV-34dqGZeQFI&html=&pos=6&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - new related research"]}
{"title": "Local Agentic RAG-Based Information System Development for Intelligent Analysis of GitHub Code Repositories in Computer Science Education", "first_label": ["Code"], "second_label": ["Agent"], "data": "Z Hu, MM Paprotskyi, V Vysotska, L Chyrun, Y Ushenko\nThis study presents the development and evaluation of a local agent-based Retrieval-\nAugmented Generation (Agentic RAG) system designed for the intelligent analysis of \nGitHub repositories in computer science education and IT practice. The novelty of", "link": "https://scholar.google.com/scholar_url?url=https://www.mecs-press.org/ijmecs/ijmecs-v17-n5/IJMECS-V17-N5-7.pdf&hl=en&sa=X&d=15899062735032558573&ei=wB_4aJeBI97M6rQPpPXkqAI&scisig=AAZF9b9zpITZz-kJHGT1UMgEWtn4&oi=scholaralrt&hist=ylyK0_8AAAAJ:4812769200119993430:AAZF9b_1MT--9phVV-34dqGZeQFI&html=&pos=8&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - new related research"]}
{"title": "Verification Limits Code LLM Training", "first_label": ["Verification", "LLM", "Code"], "second_label": [], "data": "S Gureja, E Tommasone, J He, S Hooker, M Gall- arXiv preprint arXiv, 2025\nLarge language models for code generation increasingly rely on synthetic data, \nwhere both problem solutions and verification tests are generated by models. While \nthis enables scalable data creation, it introduces a previously unexplored bottleneck\n\u00a0\nThis message was sent by Google Scholar because you're following new articles related to research by \nThanh Le-Cong\n.\nList alerts\nCancel alert", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.20837&hl=en&sa=X&d=4117827863762930027&ei=wB_4aJeBI97M6rQPpPXkqAI&scisig=AAZF9b_CjUHD_ysic3yg92n8IJ_N&oi=scholaralrt&hist=ylyK0_8AAAAJ:4812769200119993430:AAZF9b_1MT--9phVV-34dqGZeQFI&html=&pos=9&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - new related research"]}
{"title": "PIShield: Detecting Prompt Injection Attacks via Intrinsic LLM Features", "first_label": ["LLM"], "second_label": ["Detection"], "data": "W Zou, Y Liu, Y Wang, Y Chen, N Gong, J Jia- arXiv preprint arXiv:2510.14005, 2025\nLLM-integrated applications are vulnerable to prompt injection attacks, where an \nattacker contaminates the input to inject malicious prompts, causing the LLM to follow \nthe attacker's intent instead of the original user's. Existing prompt injection detection", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.14005&hl=en&sa=X&d=13106089087168856091&ei=wh_4aPSXNom16rQPu6Ol8AM&scisig=AAZF9b_hGk51t_eyS3BpajYwvuIq&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=0&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "From Defender to Devil? Unintended Risk Interactions Induced by LLM Defenses", "first_label": ["LLM"], "second_label": [], "data": "X Meng, T Cong, L Wang, W Chen, Z Li, S Guo- arXiv preprint arXiv, 2025\nLarge Language Models (LLMs) have shown remarkable performance across \nvarious applications, but their deployment in sensitive domains raises significant \nconcerns. To mitigate these risks, numerous defense strategies have been proposed", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.07968&hl=en&sa=X&d=16628375445005170696&ei=wh_4aPSXNom16rQPu6Ol8AM&scisig=AAZF9b-769OFYdciBP8asq-WL4LX&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=1&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "HarmMetric Eval: Benchmarking Metrics and Judges for LLM Harmfulness Assessment", "first_label": ["LLM"], "second_label": [], "data": "L Yang, T Zheng, K Xiu, Y Chen, D Wang, P Zhao- arXiv preprint arXiv, 2025\nThe alignment of large language models (LLMs) with human values is critical for their \nsafe deployment, yet jailbreak attacks can subvert this alignment to elicit harmful \noutputs from LLMs. In recent years, a proliferation of jailbreak attacks has emerged", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.24384%3F&hl=en&sa=X&d=6954529287697046870&ei=wh_4aPSXNom16rQPu6Ol8AM&scisig=AAZF9b9dFauzR9dpBNzzfY8bDWby&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=2&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "RADAR: A Risk-Aware Dynamic Multi-Agent Framework for LLM Safety Evaluation via Role-Specialized Collaboration", "first_label": ["LLM"], "second_label": ["Agent"], "data": "X Chen, J Zhao, Y Yuan, T Zhang, H Zhou, Z Zhu, P Hu- arXiv preprint arXiv, 2025\nExisting safety evaluation methods for large language models (LLMs) suffer from \ninherent limitations, including evaluator bias and detection failures arising from \nmodel homogeneity, which collectively undermine the robustness of risk evaluation", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.25271%3F&hl=en&sa=X&d=9498150266007123670&ei=wh_4aPSXNom16rQPu6Ol8AM&scisig=AAZF9b95zCxcGgN2hu1swbKS_h_V&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=3&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "Formalization Driven LLM Prompt Jailbreaking via Reinforcement Learning", "first_label": ["LLM"], "second_label": [], "data": "Z Wang, D He, Z Zhang, X Li, L Zhu, M Li, J Liu- arXiv preprint arXiv:2509.23558, 2025\nLarge language models (LLMs) have demonstrated remarkable capabilities, yet they \nalso introduce novel security challenges. For instance, prompt jailbreaking attacks \ninvolve adversaries crafting sophisticated prompts to elicit responses from LLMs that", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.23558%3F&hl=en&sa=X&d=2749826917926664463&ei=wh_4aPSXNom16rQPu6Ol8AM&scisig=AAZF9b9socy1uU0idrQjXea7u6Gn&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=4&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "Defeating Cerberus: Concept-Guided Privacy-Leakage Mitigation in Multimodal Language Models", "first_label": ["LLM"], "second_label": [], "data": "B Zhang, IE Akkus, R Chen, A Dethise, K Satzke- arXiv preprint arXiv, 2025\nMultimodal large language models (MLLMs) have demonstrated remarkable \ncapabilities in processing and reasoning over diverse modalities, but their advanced \nabilities also raise significant privacy concerns, particularly regarding Personally", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.25525%3F&hl=en&sa=X&d=188731358198544290&ei=wh_4aPSXNom16rQPu6Ol8AM&scisig=AAZF9b83Zm3Lci4vXc2-RuCtKxTZ&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=5&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "Proactive defense against LLM Jailbreak", "first_label": ["LLM"], "second_label": [], "data": "W Zhao, J Peng, D Ben-Levi, Z Yu, J Yang- arXiv preprint arXiv:2510.05052, 2025\nThe proliferation of powerful large language models (LLMs) has necessitated robust \nsafety alignment, yet these models remain vulnerable to evolving adversarial attacks, \nincluding multi-turn jailbreaks that iteratively search for successful queries. Current", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.05052&hl=en&sa=X&d=12643963361954479351&ei=wh_4aPSXNom16rQPu6Ol8AM&scisig=AAZF9b8Coa_W30rxK1WFNlFrrWpl&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=6&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "Microsaccade-Inspired Probing: Positional Encoding Perturbations Reveal LLM Misbehaviours", "first_label": ["LLM"], "second_label": [], "data": "R Melo, R Abreu, CS Pasareanu- arXiv preprint arXiv:2510.01288, 2025\nWe draw inspiration from microsaccades, tiny involuntary eye movements that reveal \nhidden dynamics of human perception, to propose an analogous probing method for \nlarge language models (LLMs). Just as microsaccades expose subtle but informative", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.01288&hl=en&sa=X&d=4079834350174690212&ei=wh_4aPSXNom16rQPu6Ol8AM&scisig=AAZF9b8rbcS03ioCYUn4xb7F5XTc&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=7&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "LLM Unlearning Under the Microscope: A Full-Stack View on Methods and Metrics", "first_label": ["LLM"], "second_label": [], "data": "C Fan, C Wang, Y Huang, S Pal, S Liu- arXiv preprint arXiv:2510.07626, 2025\nMachine unlearning for large language models (LLMs) aims to remove undesired \ndata, knowledge, and behaviors (eg, for safety, privacy, or copyright) while \npreserving useful model capabilities. Despite rapid progress over the past two years", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.07626%3F&hl=en&sa=X&d=2219175947074663426&ei=wh_4aPSXNom16rQPu6Ol8AM&scisig=AAZF9b9WT042RKh5sfiV4352ZB2M&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=8&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "A2D: Any-Order, Any-Step Safety Alignment for Diffusion Language Models", "first_label": ["LLM"], "second_label": [], "data": "W Jeung, S Yoon, Y Cho, D Jeon, S Shin, H Hong- arXiv preprint arXiv, 2025\nDiffusion large language models (dLLMs) enable any-order generation, but this \nflexibility enlarges the attack surface: harmful spans may appear at arbitrary \npositions, and template-based prefilling attacks such as DIJA bypass response-level\n\u00a0\nThis message was sent by Google Scholar because you're following new articles related to research by \nRichard Fang\n.\nList alerts\nCancel alert", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.23286&hl=en&sa=X&d=16977104919503302935&ei=wh_4aPSXNom16rQPu6Ol8AM&scisig=AAZF9b-9ssXxkPlc54WBS9-P-Zx-&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=9&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "LLM Agents for Automated Web Vulnerability Reproduction: Are We There Yet?", "first_label": ["Vulnerabilities", "LLM"], "second_label": ["Agent"], "data": "B Liu, Y Zhao, G Xu, H Wang- arXiv preprint arXiv:2510.14700, 2025\nLarge language model (LLM) agents have demonstrated remarkable capabilities in \nsoftware engineering and cybersecurity tasks, including code generation, \nvulnerability discovery, and automated testing. One critical but underexplored \napplication is automated web vulnerability reproduction, which transforms \nvulnerability reports into working exploits. Although recent advances suggest \npromising potential, challenges remain in applying LLM agents to real-world web\nCites: Teams of llm agents can exploit zero-day vulnerabilities\u00a0\u00a0\n\u00a0\nThis message was sent by Google Scholar because you're following new citations to articles written by \nRichard Fang\n.\nList alerts\nCancel alert", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.14700&hl=en&sa=X&d=13248429733898173552&ei=wB_4aJunEoOAieoPtpDVoA0&scisig=AAZF9b9d6aKyqbJtRpaUP3AQ9ki9&oi=scholaralrt&hist=ylyK0_8AAAAJ:4436498698466669065:AAZF9b-6dRec6PGUxNGKd2t3_e20&html=&pos=0&folt=cit", "author": ["Richard Fang"], "ref": ["1 new citation to articles by Richard Fang"]}
{"title": "Multi Language Models for On-the-Fly Syntax Highlighting", "first_label": ["LLM"], "second_label": [], "data": "ME Palma, P Rani, HC Gall- arXiv preprint arXiv:2510.04166, 2025\nSyntax highlighting is a critical feature in modern software development \nenvironments, enhancing code readability and developer productivity. However, \ndelivering accurate highlighting in real time remains challenging for online and web", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.04166%3F&hl=en&sa=X&d=2254729212502568662&ei=wB_4aJWSAdyOieoP1t-zoQM&scisig=AAZF9b-GHye_T1XfPPLdXBWI9HsB&oi=scholaralrt&hist=ylyK0_8AAAAJ:4328508672846969495:AAZF9b9vPVpCbQIEUDOQKatBd4_T&html=&pos=1&folt=rel", "author": ["Bach Le"], "ref": ["Bach Le - new related research"]}
{"title": "What Do They Fix? LLM-Aided Categorization of Security Patches for Critical Memory Bugs", "first_label": ["LLM", "Bug"], "second_label": [], "data": "X Li, J Pu, Y Wu, X Zou, S Zhu, Q Wu, Z Zhang, J Hsu- arXiv preprint arXiv, 2025\nOpen-source software projects are foundational to modern software ecosystems, with \nthe Linux kernel standing out as a critical exemplar due to its ubiquity and \ncomplexity. Although security patches are continuously integrated into the Linux", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.22796&hl=en&sa=X&d=5877456260761011502&ei=wB_4aJWSAdyOieoP1t-zoQM&scisig=AAZF9b_K5bVx20Ft-L-epPjLrGqv&oi=scholaralrt&hist=ylyK0_8AAAAJ:4328508672846969495:AAZF9b9vPVpCbQIEUDOQKatBd4_T&html=&pos=2&folt=rel", "author": ["Bach Le"], "ref": ["Bach Le - new related research"]}
{"title": "Enhancing Code Quality Through Automated Refactoring Using Transformer-Based Language Models.", "first_label": ["LLM", "Code"], "second_label": [], "data": "A Lakshmi, ES Sigamany, R Traisa, R Kumar- International Journal of, 2025\nMaintaining high-quality source code is crucial for software reliability, scalability, and \nmaintainability. Traditional refactoring methods, which involve manual code \nimprovement or rule-based automation, often fall short due to their inability to \nunderstand the contextual semantics of code. These approaches are rigid, language-\nspecific, and prone to inconsistencies, especially in large and complex code bases. \nAs a result, developers spend significant time and effort identifying code smells\nCites: Automatic Programming: Large Language Models and Beyond", "link": "https://scholar.google.com/scholar_url?url=https://search.ebscohost.com/login.aspx%3Fdirect%3Dtrue%26profile%3Dehost%26scope%3Dsite%26authtype%3Dcrawler%26jrnl%3D2158107X%26AN%3D188536315%26h%3DaG%252Fldos2JqmLq9QCsaC08S%252BNMcqgYGCyl5uA%252FKcoqXuoMU9cmUSLFlkTJQueVyb8WOpgHVIk5q2f0IvlkygRBQ%253D%253D%26crl%3Dc&hl=en&sa=X&d=1898894307675892416&ei=wR_4aMzEMdrZzwKX7-SYDw&scisig=AAZF9b8imD9g68xgNm3liq5NmBg2&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=0&folt=cit", "author": ["Abhik Roychoudhury"], "ref": ["10 new citations to articles by Abhik Roychoudhury"]}
{"title": "Addressing Data Leakage and Imbalance for Robust Fine-Tuning of Pre-Trained Code Language Models in Program Repair and Vulnerability Detection", "first_label": ["Vulnerabilities", "APR", "LLM", "Code"], "second_label": ["Detection", "Repair"], "data": "AS Yadav - 2025\nAbstract Large Language Models (LLMs) hold significant promise for advancing \nautomated vulnerability detection and program repair, yet their effectiveness is often \nconstrained by fundamental issues in dataset construction and learning under \nsevere class imbalance. In this work, we investigate two critical and underexplored \nchallenges that limit real-world applicability.\nCites: Automated repair of programs from large language models. In", "link": "https://scholar.google.com/scholar_url?url=https://search.proquest.com/openview/7dfbd6a7d0eed2abea90a8ce491b8286/1%3Fpq-origsite%3Dgscholar%26cbl%3D18750%26diss%3Dy&hl=en&sa=X&d=2215683204885920150&ei=wR_4aMzEMdrZzwKX7-SYDw&scisig=AAZF9b-aTTP1vuyxv8xPxyubIY1W&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=2&folt=cit", "author": ["Abhik Roychoudhury"], "ref": ["10 new citations to articles by Abhik Roychoudhury"]}
{"title": "Specifying and Verifying Future Conditions", "first_label": [], "second_label": [], "data": "Y Song, D Foo, WN Chin- International Static Analysis Symposium, 2025\nThis paper formalizes future conditions, which complement traditional pre-and post-\nconditions to provide a more comprehensive specification of each function's \nbehaviour and expectation. Pre-conditions govern the required states before each \nfunction call, while post-conditions define the immediate outcomes (post-states) upon \ncompletion. Future conditions extend this paradigm by specifying expected temporal \nbehaviors and states that manifest after the function call has finished, potentially\nCites: ProveNFix: Temporal Property guided Program Repair", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/abs/10.1007/978-3-032-07106-4_5&hl=en&sa=X&d=15320364116643882547&ei=wR_4aMzEMdrZzwKX7-SYDw&scisig=AAZF9b-PUHE8sSqruZKjzNKTagsN&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=3&folt=cit", "author": ["Abhik Roychoudhury"], "ref": ["10 new citations to articles by Abhik Roychoudhury"]}
{"title": "Match & Mend: Minimally Invasive Local Reassembly for Patching N-day Vulnerabilities in ARM Binaries", "first_label": ["Vulnerabilities"], "second_label": [], "data": "S Jnich, M Sievers, J Kinder- arXiv preprint arXiv:2510.14384, 2025\nLow-cost Internet of Things (IoT) devices are increasingly popular but often insecure \ndue to poor update regimes. As a result, many devices run outdated and known-\nvulnerable versions of open-source software. We address this problem by proposing \nto patch IoT firmware at the binary level, without requiring vendor support. In \nparticular, we introduce minimally invasive local reassembly, a new technique for \nautomatically patching known (n-day) vulnerabilities in IoT firmware. Our approach is\nCites: Automated Patch Backporting in Linux (Experience Paper)", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.14384&hl=en&sa=X&d=10145534564009559274&ei=wR_4aMzEMdrZzwKX7-SYDw&scisig=AAZF9b9Rdosk53SryW_ToAbmNzLR&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=4&folt=cit", "author": ["Abhik Roychoudhury"], "ref": ["10 new citations to articles by Abhik Roychoudhury"]}
{"title": "A Systematic Study of Time Limit Exceeded Errors in Online Programming Assignments", "first_label": [], "second_label": [], "data": "J Zhang, J Gu, W Zhang, JP Cambronero, J Kolesar- arXiv preprint arXiv, 2025\nOnline programming platforms such as Codeforces and LeetCode attract millions of \nusers seeking to learn to program or refine their skills for industry interviews. A major \nchallenge for these users is the Time Limit Exceeded (TLE) error, triggered when a \nprogram exceeds the execution time bound. Although designed as a performance \nsafeguard, TLE errors are difficult to resolve: error messages provide no diagnostic \ninsight, platform support is minimal, and existing debugging tools offer little help. As a\nCites: Verifix: Verified Repair of Programming Assignments", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.14339&hl=en&sa=X&d=17212581211702826722&ei=wR_4aMzEMdrZzwKX7-SYDw&scisig=AAZF9b9qmfQVMd9Tch9BlAm6eXNB&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=5&folt=cit", "author": ["Abhik Roychoudhury"], "ref": ["10 new citations to articles by Abhik Roychoudhury"]}
{"title": "Effective Instrumentation and Runtime Support for Enhancing Software Reliability", "first_label": [], "second_label": [], "data": "H Ling - 2025\nModern system and software development have evolved far beyond the traditional \ncode, compile, and deploy paradigm. Dynamic analysis and runtime monitoring \nhave become essential for enhancing testing, debugging, verification, and \noptimization in continuous development workflows. However, standard compilation \nprocesses and runtime environments often fail to capture the diverse data required \nfor effective dynamic analysis. Integrating additional compilation and runtime support\nCites: Efficient Greybox Fuzzing to Detect Memory Errors", "link": "https://scholar.google.com/scholar_url?url=https://search.proquest.com/openview/5eb27945c704a76635e026da1e0b1533/1%3Fpq-origsite%3Dgscholar%26cbl%3D2026366%26diss%3Dy&hl=en&sa=X&d=1957876497109822536&ei=wR_4aMzEMdrZzwKX7-SYDw&scisig=AAZF9b_Hq_iVIFdvVm3GtfIrbXmk&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=7&folt=cit", "author": ["Abhik Roychoudhury"], "ref": ["10 new citations to articles by Abhik Roychoudhury"]}
{"title": "SymbFuzz: Symbolic Execution Guided Hardware Fuzzing", "first_label": ["Fuzzing"], "second_label": [], "data": "SS Miftah, A Srivastava, H Kim, S Wei, K Basu- Proceedings of the 58th IEEE/ACM, 2025\nModern hardware incorporates reusable designs to reduce cost and time to market, \ninadvertently increasing exposure to security vulnerabilities. While formal verification \nand simulation-based approaches have been traditionally utilized to mitigate these \nvulnerabilities, formal techniques are hindered by scalability issues, while \nconventional simulation methods frequently overlook critical edge cases. Fuzzing, as \na simulation-based strategy, has demonstrated considerable promise in enhancing\nCites: Coverage-based greybox fuzzing as markov chain", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3725843.3756131&hl=en&sa=X&d=13892451739855032330&ei=wR_4aMzEMdrZzwKX7-SYDw&scisig=AAZF9b88GEUIg1WpJJgBgKOry7E3&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=8&folt=cit", "author": ["Abhik Roychoudhury"], "ref": ["10 new citations to articles by Abhik Roychoudhury", "Abhik Roychoudhury - new related research", "Hong Jin Kang - new related research"]}
{"title": "Detecting WebAssembly Runtime Bugs With Grammar-Guided Program Mutation", "first_label": ["Bug"], "second_label": ["Detection"], "data": "X Lu, Z Zhou, X Li, J Xuan, H Wu, H Jiang, Z Ren- IEEE Transactions on Reliability, 2025\nWebAssembly has been steadily gaining popularity in recent years, as an industry-\nwide collaborative effort to combine near-native performance with the convenience of \nhigh-level languages. It is crucial to establish effective testing methods for \nWebAssembly runtime, since all WebAssembly programs depend on the quality of \nthe runtime. Meanwhile, fuzz testing is an effective approach for detecting bugs in \ncompilers and runtimes, and has achieved promising results. However, we still face\nCites: Directed greybox fuzzing\u00a0\u00a0\n\u00a0\nThis message was sent by Google Scholar because you're following new citations to articles written by \nAbhik Roychoudhury\n.\nList alerts\nCancel alert", "link": "https://scholar.google.com/scholar_url?url=https://ieeexplore.ieee.org/abstract/document/11205981/&hl=en&sa=X&d=2145699277606162196&ei=wR_4aMzEMdrZzwKX7-SYDw&scisig=AAZF9b-8Bfok0bfhVaiMlj-_R5-P&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=9&folt=cit", "author": ["Abhik Roychoudhury"], "ref": ["10 new citations to articles by Abhik Roychoudhury", "Hong Jin Kang - new related research"]}
{"title": "MALF: A Multi-Agent LLM Framework for Intelligent Fuzzing of Industrial Control Protocols", "first_label": ["LLM", "Fuzzing"], "second_label": ["Agent"], "data": "B Ning, X Zong, K He- arXiv preprint arXiv:2510.02694, 2025\nIndustrial control systems (ICS) are vital to modern infrastructure but increasingly \nvulnerable to cybersecurity threats, particularly through weaknesses in their \ncommunication protocols. This paper presents MALF (Multi-Agent LLM Fuzzing", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.02694&hl=en&sa=X&d=17402884467768873558&ei=wh_4aKD4HLeO6rQP6NHlsQ0&scisig=AAZF9b-gbdcp8la6VIQjpMAaZGFm&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=1&folt=rel", "author": ["Abhik Roychoudhury"], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "Minoris: Practical Out-of-Emulator Kernel Module Fuzzing", "first_label": ["Fuzzing"], "second_label": [], "data": "Y Xiang, F Wang, Y Chen, Q Liu, H Wang, J Wang- IEEE Transactions on, 2025\nVulnerabilities in the Linux kernel can be exploited to perform privilege escalation \nand take over the whole system. Fuzzing has been leveraged to detect Linux kernel \nvulnerabilities during the last decade. However, existing kernel fuzzing techniques", "link": "https://scholar.google.com/scholar_url?url=https://ieeexplore.ieee.org/abstract/document/11186228/&hl=en&sa=X&d=4018952161547770155&ei=wh_4aKD4HLeO6rQP6NHlsQ0&scisig=AAZF9b_CC9xKPQgXt0Ya_fO_Yt6g&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=2&folt=rel", "author": ["Abhik Roychoudhury"], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "Extraction and Mutation at a High Level: Template-Based Fuzzing for JavaScript Engines", "first_label": ["Fuzzing"], "second_label": [], "data": "WK Wong, D Xiao, CT Lai, Y Peng, D Wu, S Wang- Proceedings of the ACM on, 2025\nJavaScript (JS) engines implement complex language semantics and optimization \nstrategies to support the dynamic nature of JS, making them difficult to test thoroughly \nand prone to subtle, security-critical bugs. Existing fuzzers often struggle to generate", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3763154&hl=en&sa=X&d=604366854830515299&ei=wh_4aKD4HLeO6rQP6NHlsQ0&scisig=AAZF9b-zybHDhCRxUx1hTq5-Uny_&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=3&folt=rel", "author": ["Abhik Roychoudhury"], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "Balancing Validity and Vulnerability: Knowledge-Driven Seed Generation via LLMs for Deep Learning Library Fuzzing", "first_label": ["Vulnerabilities", "LLM", "Fuzzing"], "second_label": ["Generation"], "data": "R Liao, X Yan, Z Pang, K Zhu- Applied Sciences, 2025\nFuzzing deep learning (DL) libraries is essential for uncovering security \nvulnerabilities in AI systems. Existing approaches enhance large language models \n(LLMs) with external knowledge such as bug reports to improve the quality of", "link": "https://scholar.google.com/scholar_url?url=https://www.mdpi.com/2076-3417/15/19/10396&hl=en&sa=X&d=9374413942225787882&ei=wh_4aKD4HLeO6rQP6NHlsQ0&scisig=AAZF9b_coV2M25K3l6JkCX-ZdrMr&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=4&folt=rel", "author": ["Abhik Roychoudhury"], "ref": ["Abhik Roychoudhury - new related research", "Hong Jin Kang - new related research"]}
{"title": "E-FuzzEdge: Optimizing Embedded Device Security with Scalable In-Place Fuzzing", "first_label": ["Fuzzing"], "second_label": [], "data": "D Rusconi, O Yousef, M Picca, F Toffalini, A Lanzi- arXiv preprint arXiv:2510.01393, 2025\nIn this paper we show E-FuzzEdge, a novel fuzzing architecture targeted towards \nimproving the throughput of fuzzing campaigns in contexts where scalability is \nunavailable. E-FuzzEdge addresses the inefficiencies of hardware-in-the-loop", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.01393&hl=en&sa=X&d=876126288656849057&ei=wh_4aKD4HLeO6rQP6NHlsQ0&scisig=AAZF9b8HafEkkmQjPmdiYY4QT43e&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=6&folt=rel", "author": ["Abhik Roychoudhury"], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "Clutch Control: An Attention-based Combinatorial Bandit for Efficient Mutation in JavaScript Engine Fuzzing", "first_label": ["Fuzzing"], "second_label": [], "data": "M Foley, S Maffeis, MF Rozi, T Takahashi- arXiv preprint arXiv:2510.12732, 2025\nJavaScript engines are widely used in web browsers, PDF readers, and server-side \napplications. The rise in concern over their security has led to the development of \nseveral targeted fuzzing techniques. However, existing approaches use random", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.12732%3F&hl=en&sa=X&d=1368299778829400409&ei=wh_4aKD4HLeO6rQP6NHlsQ0&scisig=AAZF9b8rz6zgLGBAazZeFDCIBtfs&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=7&folt=rel", "author": ["Abhik Roychoudhury"], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "DFAFUZZ: Fuzzing for Embedded JavaScript Virtual Machines with Type-Directed DFA", "first_label": ["Fuzzing"], "second_label": [], "data": "H Lai, B Hua\nJavaScript is rapidly being deployed in securitycritical embedded domains, including \nIoT devices, edge computing, and smart automotive applications. Embedded \nJavaScript virtual machines (VMs) are critical in powering such deployments, which", "link": "https://scholar.google.com/scholar_url?url=https://csslab-ustc.github.io/publications/2025/js-vm-bugs.pdf&hl=en&sa=X&d=14086662969394613156&ei=wh_4aKD4HLeO6rQP6NHlsQ0&scisig=AAZF9b_N79M1UHX5bgLAcXN1CDD7&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=8&folt=rel", "author": ["Abhik Roychoudhury"], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "TeTRIS: General-purpose Fuzzing for Translation Bugs in Source-to-Source Code Transpilers", "first_label": ["Fuzzing", "Code", "Bug"], "second_label": ["Generation"], "data": "Y Arafat, S Nagy - 2025\nAmid the rise of heterogeneous computing and concerns over systems and \napplication security, developers are increasingly embracing transpilers: a growing \nclass of tools for converting code from one programming language into another. As\n\u00a0\nThis message was sent by Google Scholar because you're following new articles related to research by \nAbhik Roychoudhury\n.\nList alerts\nCancel alert", "link": "https://scholar.google.com/scholar_url?url=https://futures.cs.utah.edu/papers/25ACSAC.pdf&hl=en&sa=X&d=7907468188891103628&ei=wh_4aKD4HLeO6rQP6NHlsQ0&scisig=AAZF9b_X5wz-gD-8yp4ujsLZ1oNT&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=9&folt=rel", "author": ["Abhik Roychoudhury"], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "Usage patterns of software product metrics in assessing developers' output: A comprehensive study", "first_label": [], "second_label": [], "data": "W Chen, H Yu, G Fan, Z Huang, Y Liang- Information and Software Technology, 2025\nContext: Accurate assessment of developers' output is crucial for both software \nengineering research and industrial practice. This assessment often relies on \nsoftware product metrics such as lines of code (LOC) and quality indicators from \nstatic analysis tools. However, existing research lacks a comprehensive \nunderstanding of the usage patterns of product metrics, and a single metric is \nincreasingly vulnerable to manipulation, particularly with the emergence of large\nCites: Detecting false alarms from automatic static analysis tools: How far\u00a0\u00a0\n\u00a0\nThis message was sent by Google Scholar because you're following new citations to articles written by \nHong Jin Kang\n.\nList alerts\nCancel alert", "link": "https://scholar.google.com/scholar_url?url=https://www.sciencedirect.com/science/article/pii/S0950584925002745&hl=en&sa=X&d=4443828525046492267&ei=wB_4aMyNM4m16rQPu6Ol8AM&scisig=AAZF9b9CpIhaWYLtovg6iDR3kHrJ&oi=scholaralrt&hist=ylyK0_8AAAAJ:4851239734318863641:AAZF9b8LH3KLAxOt2g9Q0Um21N4o&html=&pos=1&folt=cit", "author": ["Hong Jin Kang"], "ref": ["2 new citations to articles by Hong Jin Kang"]}
{"title": "Detecting and Fixing API Misuses of Data Science Libraries Using Large Language Models", "first_label": ["LLM"], "second_label": ["Detection"], "data": "A Galappaththi, F Ribeiro, S Nadi- arXiv preprint arXiv:2509.25378, 2025\nData science libraries, such as scikit-learn and pandas, specialize in processing and \nmanipulating data. The data-centric nature of these libraries makes the detection of \nAPI misuse in them more challenging. This paper introduces DSCHECKER, an LLM", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.25378&hl=en&sa=X&d=14058605386697265462&ei=wx_4aOefEfOx6rQP9IDG8Qs&scisig=AAZF9b9IShG12tfy_E6MI3bYz_8z&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=2&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research"]}
{"title": "PIONEER: improving the robustness of student models when compressing pre-trained models of code", "first_label": ["Code"], "second_label": [], "data": "X Liu, X Liu, L Bo, X Wu, Y Yang, X Sun, F Zhou- Automated Software Engineering, 2026\nPre-trained models of code have shown significant effectiveness in a variety of \nsoftware engineering tasks, but they are difficult for local deployment due to their \nlarge size. Existing works mainly focus on compressing these large models into small", "link": "https://scholar.google.com/scholar_url?url=https://link.springer.com/article/10.1007/s10515-025-00560-2&hl=en&sa=X&d=17836676178374949159&ei=wx_4aOefEfOx6rQP9IDG8Qs&scisig=AAZF9b_ryg7uDpBLUFYEs8zWj5qt&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=4&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research"]}
{"title": "Assertion Messages with Large Language Models (LLMs) for Code", "first_label": ["LLM", "Code"], "second_label": [], "data": "A Aljohani, AH Mollah, H Do- arXiv preprint arXiv:2509.19673, 2025\nAssertion messages significantly enhance unit tests by clearly explaining the \nreasons behind test failures, yet they are frequently omitted by developers and \nautomated test-generation tools. Despite recent advancements, Large Language", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2509.19673&hl=en&sa=X&d=7084463702742822906&ei=wx_4aOefEfOx6rQP9IDG8Qs&scisig=AAZF9b93i6m23y0xnjeM1zyUGkQc&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=6&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research"]}
{"title": "Detecting code paraphrased by large language models using coding style features", "first_label": ["LLM", "Code"], "second_label": ["Detection"], "data": "S Park, H Jin, J Cha, YS Han- Engineering Applications of Artificial Intelligence, 2025\nRecent progress in large language models (LLMs) for code generation has raised \nserious concerns about intellectual property protection. Malicious users can exploit \nLLMs to produce paraphrased versions of proprietary code that closely resemble the", "link": "https://scholar.google.com/scholar_url?url=https://www.sciencedirect.com/science/article/pii/S0952197625024856&hl=en&sa=X&d=5148275569496423324&ei=wx_4aOefEfOx6rQP9IDG8Qs&scisig=AAZF9b_ntG39PI9nkGiO4Gwy8bEN&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=8&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research"]}
{"title": "ATGen: Adversarial Reinforcement Learning for Test Case Generation", "first_label": ["Software Testing"], "second_label": ["Generation"], "data": "Q Li, X Dai, W Liu, X Li, Y Wang, R Tang, Y Yu- arXiv preprint arXiv, 2025\nLarge Language Models (LLMs) excel at code generation, yet their outputs often \ncontain subtle bugs, for which effective test cases are a critical bottleneck. Existing \ntest generation methods, whether based on prompting or supervised fine-tuning, rely\n\u00a0\nThis message was sent by Google Scholar because you're following new articles related to research by \nHong Jin Kang\n.\nList alerts\nCancel alert", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2510.14635&hl=en&sa=X&d=11721547930993359857&ei=wx_4aOefEfOx6rQP9IDG8Qs&scisig=AAZF9b9Faw97UWJFcd1PbLANiD01&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=9&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research"]}
