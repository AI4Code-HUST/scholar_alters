{"title": "When in Doubt Throw It Out: Building on Confident Learning for Vulnerability Detection", "first_label": ["Vulnerabilities"], "second_label": ["Detection"], "data": "Y Gong, F Massacci\n[Context:] Confident learning's intuition is that a good model can be used to identify \nmislabelled data. By swapping mislabeled samples that are not confidently \npredicted, the performance of model can be further improved.[Problem:]\\xc2\\xa0\\xe2\\x80\\xa6\n\u00a0\nThis message was sent by Google Scholar because you\\'re following new articles related to research by \nXin ZHOU\n.\nList alerts\nCancel alert\n\\r\\n'", "link": "https://scholar.google.com/scholar_url?url=https://fabiomassacci.github.io/docs/Confidence_Learning_for_Vulnerabilities_icse.pdf&hl=en&sa=X&d=13559931435466858116&ei=xPsgaMujCpDIieoPn6y1iAQ&scisig=AAZF9b-xawTINUUxoN2qq0lYps0m&oi=scholaralrt&hist=ylyK0_8AAAAJ:16898579961534012346:AAZF9b8mlk_JgC2UbDdCdga5r9UH&html=&pos=0&folt=rel", "author": ["Xin ZHOU"], "ref": ["Xin ZHOU - new related research", "Hong Jin Kang - new related research", "Quang-Cuong Bui - new related research", "David Lo - new related research"]}
{"title": "Software Development Life Cycle Perspective: A Survey of Benchmarks for CodeLLMs and Agents", "first_label": ["LLM", "Code"], "second_label": ["Agent"], "data": "K Wang, T Li, X Zhang, C Wang, W Sun, Y Liu, B Shi\\xc2\\xa0- arXiv preprint arXiv\\xc2\\xa0\\xe2\\x80\\xa6, 2025\nCode large language models (CodeLLMs) and agents have shown great promise in \ntackling complex software engineering tasks. Compared to traditional software \nengineering methods, CodeLLMs and agents offer stronger abilities, and can flexibly \nprocess inputs and outputs in both natural and code. Benchmarking plays a crucial \nrole in evaluating the capabilities of CodeLLMs and agents, guiding their \ndevelopment and deployment. However, despite their growing significance, there\\xc2\\xa0\\xe2\\x80\\xa6\n\\xe2\\x80\\xa2\nCites: \\xe2\\x80\\xaaLessLeak-Bench: A First Investigation of Data Leakage in LLMs\\xc2\\xa0\\xe2\\x80\\xa6\\xe2\\x80\\xac", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2505.05283&hl=en&sa=X&d=2782954422196059084&ei=xPsgaOmWB42Z6rQP8OTB4AI&scisig=AAZF9b93vWqgiXWe1j2XaoRxer5O&oi=scholaralrt&hist=ylyK0_8AAAAJ:15035864585353249078:AAZF9b__fNdZeFj1p33oPi7SBv6G&html=&pos=0&folt=cit", "author": ["Xin ZHOU"], "ref": ["2 new citations to articles by Xin ZHOU", "1 new citation to articles by Quang-Cuong Bui", "2 new citations to articles by Hong Jin Kang", "5 new citations to articles by Abhik Roychoudhury"]}
{"title": "Software vulnerability detection using machine learning", "first_label": ["Vulnerabilities"], "second_label": ["Detection"], "data": "\\xce\\x97 \\xce\\x9a\\xce\\xb1\\xce\\xbb\\xce\\xbf\\xcf\\x85\\xcf\\x80\\xcf\\x84\\xcf\\x83\\xcf\\x8c\\xce\\xb3\\xce\\xbb\\xce\\xbf\\xcf\\x85 - 2025\nModern software systems are complex, interconnected, and exposed to security \nthreats. It is a necessity for software houses to identify vulnerabilities, which are \ncoding flaws that threaten the software quality and reliability, exposing organizations \nto cyberattacks, and potentially leading to financial damages. Although software \nsecurity is traditionally treated as an afterthought added during the deployment \nphase of the Software Development Life-Cycle (SDLC), Vulnerability Detection (VD)\\xc2\\xa0\\xe2\\x80\\xa6\n\\xe2\\x80\\xa2\nCites: \\xe2\\x80\\xaaLarge language model for vulnerability detection: Emerging results\\xc2\\xa0\\xe2\\x80\\xa6\\xe2\\x80\\xac\u00a0\u00a0\n\u00a0\nThis message was sent by Google Scholar because you\\'re following new citations to articles written by \nXin ZHOU\n.\nList alerts\nCancel alert\n\\r\\n'", "link": "https://scholar.google.com/scholar_url?url=https://dspace.lib.uom.gr/bitstream/2159/32977/1/KalouptsoglouIliasPhD2025.pdf&hl=en&sa=X&d=5610522339494751733&ei=xPsgaOmWB42Z6rQP8OTB4AI&scisig=AAZF9b_2eb308OLavSdyh9iWuiAG&oi=scholaralrt&hist=ylyK0_8AAAAJ:15035864585353249078:AAZF9b__fNdZeFj1p33oPi7SBv6G&html=&pos=1&folt=cit", "author": ["Xin ZHOU"], "ref": ["2 new citations to articles by Xin ZHOU"]}
{"title": "CHIMERA: Fuzzing P4 Network Infrastructure for Multi-Plane Bug Detection and Vulnerability Discovery", "first_label": ["Vulnerabilities", "Fuzzing", "Bug"], "second_label": ["Detection"], "data": "J Kim, DJ Tian, BE Ujcich\\xc2\\xa0- 2025 IEEE Symposium on Security and Privacy (SP), 2025\nProgrammable network data planes, such as P4, offer flexibility in defining network \nforwarding behavior. However, such programmability introduces a new attack \nsurface for bugs and security vulnerabilities. Most P4 security research has focused\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://kjw6855.github.io/assets/pdf/sp25_kim_chimera.pdf&hl=en&sa=X&d=6094077905886690143&ei=xPsgaMmyBJK26rQPmeqAiQw&scisig=AAZF9b86dvBdClyFEIFpgKdNzAJ4&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=0&folt=rel", "author": [], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "Yesterday Once MorE: Facilitating Linux Kernel Bug Reproduction via Reverse Fuzzing", "first_label": ["Fuzzing", "Bug"], "second_label": [], "data": "X Li, Y Kang, C Wu, D Liu, J Wang, Y Sun, Z Wu\\xe2\\x80\\xa6\\xc2\\xa0- IEEE Transactions on\\xc2\\xa0\\xe2\\x80\\xa6, 2025\nThe Linux kernel remains vulnerable to numerous bugs, with approximately 65% \ndetected by Syzkaller lacking Proof-of-Concept (PoC), hampering risk mitigation \nefforts. These bugs, termed irreproducible kernel bugs, highlight the challenge of\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://ieeexplore.ieee.org/abstract/document/10974508/&hl=en&sa=X&d=3315420953764714878&ei=xPsgaMmyBJK26rQPmeqAiQw&scisig=AAZF9b9-UXOL8xe-8kFgSaZ_qV7P&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=1&folt=rel", "author": [], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "CBGF: Callback Coverage Guided Fuzzing", "first_label": ["Fuzzing"], "second_label": [], "data": "H Hwang, D Moon\\xc2\\xa0- IEEE Access, 2025\nCallback functions are widely used across programming languages, libraries, and \noperating systems. While offering flexible software design, these mechanisms \nintroduce inherently complex execution flows that can serve as potential attack\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://ieeexplore.ieee.org/iel8/6287639/6514899/10965623.pdf&hl=en&sa=X&d=3130441307734811739&ei=xPsgaMmyBJK26rQPmeqAiQw&scisig=AAZF9b_FLqC17adWphONw1LQxaLM&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=2&folt=rel", "author": [], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "VLM-Fuzz: Vision Language Model Assisted Recursive Depth-first Search Exploration for Effective UI Testing of Android Apps", "first_label": ["Fuzzing", "Software Testing"], "second_label": ["Search"], "data": "BF Demissie, YN Tun, LK Shar, M Ceccato\\xc2\\xa0- arXiv preprint arXiv:2504.11675, 2025\nTesting Android apps effectively requires a systematic exploration of the app's \npossible states by simulating user interactions and system events. While existing \napproaches have proposed several fuzzing techniques to generate various text\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2504.11675&hl=en&sa=X&d=1988321903897613415&ei=xPsgaMmyBJK26rQPmeqAiQw&scisig=AAZF9b97gghXTQnt2wHdcBD6wIbH&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=3&folt=rel", "author": [], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "RAG-Based Fuzzing of Cross-Architecture Compilers", "first_label": ["Fuzzing"], "second_label": [], "data": "R Elnaggar, B Delgado, JM Fung\\xc2\\xa0- arXiv preprint arXiv:2504.08967, 2025\nOneAPI is an open standard that supports cross-architecture software development \nwith minimal effort from developers. It brings DPC++ and C++ compilers which need \nto be thoroughly tested to verify their correctness, reliability, and security. Compilers\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2504.08967&hl=en&sa=X&d=18234725876643657828&ei=xPsgaMmyBJK26rQPmeqAiQw&scisig=AAZF9b_g9Xu-EAMUe2MMqzN85wm_&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=4&folt=rel", "author": [], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "Using Historical Information for Fuzzing JavaScript Engines", "first_label": ["Fuzzing"], "second_label": [], "data": "BG de Oliveira, AT Endo, SR Vergilio\nJavaScript is a programming language commonly used to add interactivity and \ndynamic functionality to websites. It is a high-level, dynamically-typed language, well-\nsuited for building complex, client-side applications and supporting server-side\\xc2\\xa0\\xe2\\x80\\xa6\n\u00a0\nThis message was sent by Google Scholar because you\\'re following new articles related to research by \nAbhik Roychoudhury\n.\nList alerts\nCancel alert\n\\r\\n'", "link": "https://scholar.google.com/scholar_url?url=https://www.scitepress.org/Papers/2025/134177/134177.pdf&hl=en&sa=X&d=12017355669252469211&ei=xPsgaMmyBJK26rQPmeqAiQw&scisig=AAZF9b_j7bAjZmSfoWjcVwV7Oa3C&oi=scholaralrt&hist=ylyK0_8AAAAJ:12723761785867032729:AAZF9b9l_z1CTdTcNTkZbRX9RLem&html=&pos=5&folt=rel", "author": [], "ref": ["Abhik Roychoudhury - new related research"]}
{"title": "From Bug Reports to Workarounds: The Real-World Impact of Compiler Bugs", "first_label": ["Bug"], "second_label": [], "data": "Z He, H Zhong\\xc2\\xa0- Proc. SANER. to appear, 2025\nCompilers are essential in daily development, but their bugs can introduce hidden \nbugs to many software projects. As compiler bugs are important, researchers have \nconducted various empirical studies to understand their characteristics. Most of the\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://www.cs.sjtu.edu.cn/~zhonghao/paper/compilerstudy.pdf&hl=en&sa=X&d=14250214852076220376&ei=xPsgaNjmC7Oi6rQPvJGpyAE&scisig=AAZF9b_xTLz8wOGY7Z8NmCwN5lDL&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=0&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research", "David Lo - new related research"]}
{"title": "SIFT: enhance the performance of vulnerability detection by incorporating structural knowledge and multi-task learning", "first_label": ["Vulnerabilities"], "second_label": ["Detection"], "data": "L Wang, G Lu, X Chen, X Dai, J Qiu\\xc2\\xa0- Automated Software Engineering, 2025\nSoftware vulnerabilities pose significant risks to software systems, leading to security \nbreaches, data loss, operational disruptions, and substantial financial damage. \nTherefore, accurately detecting these vulnerabilities is of paramount importance. In\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://link.springer.com/article/10.1007/s10515-025-00507-7&hl=en&sa=X&d=13098354900020773737&ei=xPsgaNjmC7Oi6rQPvJGpyAE&scisig=AAZF9b_1aVg08sRG2_EE56E3Lkrf&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=1&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research"]}
{"title": "Automated Generation of Commit Messages in Software Repositories", "first_label": ["Commit Message"], "second_label": ["Generation"], "data": "VK Palakodeti, A Heydarnoori\\xc2\\xa0- arXiv preprint arXiv:2504.12998, 2025\nCommit messages are crucial for documenting software changes, aiding in program \ncomprehension and maintenance. However, creating effective commit messages is \noften overlooked by developers due to time constraints and varying levels of\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2504.12998&hl=en&sa=X&d=6245184434680463467&ei=xPsgaNjmC7Oi6rQPvJGpyAE&scisig=AAZF9b81AlBZEGqRJJgDDs8b3y4i&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=2&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research", "Thanh Le-Cong - new related research"]}
{"title": "Version-level Third-Party Library Detection in Android Applications via Class Structural Similarity", "first_label": [], "second_label": ["Detection"], "data": "B Zhou, J Wu, X Ling, T Luo, J Zhang\\xc2\\xa0- arXiv preprint arXiv:2504.13547, 2025\nAndroid applications (apps) integrate reusable and well-tested third-party libraries \n(TPLs) to enhance functionality and shorten development cycles. However, recent \nresearch reveals that TPLs have become the largest attack surface for Android apps\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2504.13547&hl=en&sa=X&d=18236922013422698963&ei=xPsgaNjmC7Oi6rQPvJGpyAE&scisig=AAZF9b-N6MoSNIqgDp2dmsfVZDPO&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=3&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research"]}
{"title": "Context-aware prompting for LLM-based program repair", "first_label": ["APR", "LLM"], "second_label": ["Repair"], "data": "Y Li, M Cai, J Chen, Y Xu, L Huang, J Li\\xc2\\xa0- Automated Software Engineering, 2025\nAutomated program repair (APR) plays a crucial role in ensuring the quality of \nsoftware code, as manual bug-fixing is extremely time-consuming and labor-\nintensive. Traditional APR tools (eg, template-based approaches) face the challenge\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://link.springer.com/article/10.1007/s10515-025-00512-w&hl=en&sa=X&d=3912460072881824433&ei=xPsgaNjmC7Oi6rQPvJGpyAE&scisig=AAZF9b8mSt6gXxaEhm0PZpk9rQjG&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=5&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research"]}
{"title": "FuMi: A Runtime Fuzz-based Machine Learning Precision Measurement and Testing Framework", "first_label": ["Fuzzing", "Software Testing"], "second_label": [], "data": "P Zhang, M Papadakis, Y Zhou\\xc2\\xa0- ACM Transactions on Software Engineering and\\xc2\\xa0\\xe2\\x80\\xa6, 2025\nThe rapid evolution of machine learning model training has outpaced the \ndevelopment of corresponding measurement and testing tools, leading to two \nsignificant challenges. Firstly, developers of deep learning frameworks struggle to\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://dl.acm.org/doi/pdf/10.1145/3734866&hl=en&sa=X&d=443748504498747987&ei=xPsgaNjmC7Oi6rQPvJGpyAE&scisig=AAZF9b-m9nEck6ZkcmP1h4Ho8h1H&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=6&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research"]}
{"title": "Early Accessibility: Automating Alt-Text Generation for UI Icons During App Development", "first_label": [], "second_label": ["Generation"], "data": "S Haque, C Csallner\\xc2\\xa0- arXiv preprint arXiv:2504.13069, 2025\nAlt-text is essential for mobile app accessibility, yet UI icons often lack meaningful \ndescriptions, limiting accessibility for screen reader users. Existing approaches either \nrequire extensive labeled datasets, struggle with partial UI contexts, or operate post\\xc2\\xa0\\xe2\\x80\\xa6\n\u00a0\nThis message was sent by Google Scholar because you\\'re following new articles related to research by \nHong Jin Kang\n.\nList alerts\nCancel alert\n\\r\\n'", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2504.13069&hl=en&sa=X&d=15582642935887304547&ei=xPsgaNjmC7Oi6rQPvJGpyAE&scisig=AAZF9b9rsHOA9yL385SiojMPuS4J&oi=scholaralrt&hist=ylyK0_8AAAAJ:17903213248891513419:AAZF9b_VfgOz15WyMBkfhPNIM3wy&html=&pos=7&folt=rel", "author": ["Hong Jin Kang"], "ref": ["Hong Jin Kang - new related research"]}
{"title": "Alleviating the Fear of Losing Alignment in LLM Fine-tuning", "first_label": ["LLM"], "second_label": [], "data": "K Yang, G Tao, X Chen, J Xu\\xc2\\xa0- arXiv preprint arXiv:2504.09757, 2025\nLarge language models (LLMs) have demonstrated revolutionary capabilities in \nunderstanding complex contexts and performing a wide range of tasks. However, \nLLMs can also answer questions that are unethical or harmful, raising concerns\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2504.09757&hl=en&sa=X&d=17889424845471362239&ei=xPsgaPTgCIeK6rQPwPLHwAk&scisig=AAZF9b_2w-9nPgghZb_cwyss9y9W&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=0&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "Stealthy LLM-Driven Data Poisoning Attacks Against Embedding-Based Retrieval-Augmented Recommender Systems", "first_label": ["LLM"], "second_label": [], "data": "F Nazary, Y Deldjoo, T Di Noia, E Di Sciascio\\xc2\\xa0- arXiv preprint arXiv:2505.05196, 2025\nWe present a systematic study of provider-side data poisoning in retrieval-\naugmented recommender systems (RAG-based). By modifying only a small fraction \nof tokens within item descriptions--for instance, adding emotional keywords or\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2505.05196&hl=en&sa=X&d=7153996738322631678&ei=xPsgaPTgCIeK6rQPwPLHwAk&scisig=AAZF9b9XYvMXz8xtJ6dU7EDwB2B7&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=1&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "ELAB: Extensive LLM Alignment Benchmark in Persian Language", "first_label": ["LLM"], "second_label": [], "data": "Z Pourbahman, F Rajabi, M Sadeghi, O Ghahroodi\\xe2\\x80\\xa6\\xc2\\xa0- arXiv preprint arXiv\\xc2\\xa0\\xe2\\x80\\xa6, 2025\nThis paper presents a comprehensive evaluation framework for aligning Persian \nLarge Language Models (LLMs) with critical ethical dimensions, including safety, \nfairness, and social norms. It addresses the gaps in existing LLM evaluation\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2504.12553%3F&hl=en&sa=X&d=4417832566291085341&ei=xPsgaPTgCIeK6rQPwPLHwAk&scisig=AAZF9b_MvcNXVZjMHp8SP_hsJQNp&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=2&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "Adversarial-Inspired Backdoor Defense via Bridging Backdoor and Adversarial Attacks", "first_label": [], "second_label": [], "data": "JL Yin, W Wang, W Lin, X Liu\\xc2\\xa0- Proceedings of the AAAI Conference on Artificial\\xc2\\xa0\\xe2\\x80\\xa6, 2025\nBackdoor attacks and adversarial attacks are two major security threats to deep \nneural networks (DNNs), with the former one is a training-time data poisoning attack \nthat aims to implant backdoor triggers into models by injecting trigger patterns into\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://ojs.aaai.org/index.php/AAAI/article/view/33030/35185&hl=en&sa=X&d=15821097816112927058&ei=xPsgaPTgCIeK6rQPwPLHwAk&scisig=AAZF9b-kK-Y_WN7v0gOso7sVdZgm&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=3&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "Secure Transfer Learning: Training Clean Models Against Backdoor in (Both) Pre-trained Encoders and Downstream Datasets", "first_label": ["Code"], "second_label": [], "data": "Y Zhang, Y Zhou, T Li, M Li, S Hu, W Luo, LY Zhang\\xc2\\xa0- arXiv preprint arXiv:2504.11990, 2025\nTransfer learning from pre-trained encoders has become essential in modern \nmachine learning, enabling efficient model adaptation across diverse tasks. \nHowever, this combination of pre-training and downstream adaptation creates an\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2504.11990&hl=en&sa=X&d=85981534375043028&ei=xPsgaPTgCIeK6rQPwPLHwAk&scisig=AAZF9b-onv_zdOyfEcVxYwJ6H8X7&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=4&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "HEXGEN-TEXT2SQL: Optimizing LLM Inference Request Scheduling for Agentic Text-to-SQL Workflow", "first_label": ["LLM"], "second_label": ["Agent"], "data": "Y Peng, Y Jiang, C Wang, B Yuan\\xc2\\xa0- arXiv preprint arXiv:2505.05286, 2025\nRecent advances in leveraging the agentic paradigm of large language models \n(LLMs) utilization have significantly enhanced Text-to-SQL capabilities, enabling \nusers without specialized database expertise to query data intuitively. However\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2505.05286&hl=en&sa=X&d=6377650197552909211&ei=xPsgaPTgCIeK6rQPwPLHwAk&scisig=AAZF9b9Va6kgrSVNrXeD16t3wPYc&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=5&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "Unleashing the potential of prompt engineering for large language models", "first_label": ["LLM"], "second_label": [], "data": "B Chen, Z Zhang, N Langren\\xc3\\xa9, S Zhu\\xc2\\xa0- Patterns, 2025\nThis review explores the role of prompt engineering in unleashing the capabilities of \nlarge language models (LLMs). Prompt engineering is the process of structuring \ninputs, and it has emerged as a crucial technique for maximizing the utility and\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://www.cell.com/patterns/fulltext/S2666-3899(25)00108-4&hl=en&sa=X&d=6676094083615587801&ei=xPsgaPTgCIeK6rQPwPLHwAk&scisig=AAZF9b8tnw1APcMPz1M8W7CTpXY4&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=6&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "Enhancing Web Agents with Explicit Rollback Mechanisms", "first_label": [], "second_label": ["Agent"], "data": "Z Zhang, T Fang, K Ma, W Yu, H Zhang, H Mi, D Yu\\xc2\\xa0- arXiv preprint arXiv:2504.11788, 2025\nWith recent advancements in large language models, web agents have been greatly \nimproved. However, dealing with complex and dynamic web environments requires \nmore advanced planning and search abilities. Previous studies usually adopt a\\xc2\\xa0\\xe2\\x80\\xa6\n\u00a0\nThis message was sent by Google Scholar because you\\'re following new articles related to research by \nRichard Fang\n.\nList alerts\nCancel alert\n\\r\\n'", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2504.11788%3F&hl=en&sa=X&d=12132703109484744215&ei=xPsgaPTgCIeK6rQPwPLHwAk&scisig=AAZF9b9OqC4elj1elUsQol8AAHKN&oi=scholaralrt&hist=ylyK0_8AAAAJ:15287030194885030172:AAZF9b9ZGN1vUuxfG1GbOlvhloTS&html=&pos=7&folt=rel", "author": ["Richard Fang"], "ref": ["Richard Fang - new related research"]}
{"title": "COUPJAVA: A Dataset of Code Upgrade Histories in Open-Source Java Repositories", "first_label": ["Code"], "second_label": [], "data": "K Jiang, B Jin, P Nie\nModern programming languages are constantly evolving, introducing new language \nfeatures and APIs to enhance software development practices. Software developers \noften face the tedious task of upgrading their codebase to new programming \nlanguage versions. Recently, large language models (LLMs) have demonstrated \npotential in automating various code generation and editing tasks, suggesting their \napplicability in automating code upgrade. However, there exists no benchmark for\\xc2\\xa0\\xe2\\x80\\xa6\n\\xe2\\x80\\xa2\nCites: \\xe2\\x80\\xaaAutomatic Android deprecated-API usage update by learning from\\xc2\\xa0\\xe2\\x80\\xa6\\xe2\\x80\\xac\u00a0\u00a0\n\u00a0\nThis message was sent by Google Scholar because you\\'re following new citations to articles written by \nHong Jin Kang\n.\nList alerts\nCancel alert\n\\r\\n'", "link": "https://scholar.google.com/scholar_url?url=https://pengyunie.github.io/p/JiangETAL25CoUpJava.pdf&hl=en&sa=X&d=965464187869725355&ei=w_sgaMX9ObOi6rQPvJGpyAE&scisig=AAZF9b_uWFQboHfY9Xpals2WmwwZ&oi=scholaralrt&hist=ylyK0_8AAAAJ:4851239734318863641:AAZF9b8LH3KLAxOt2g9Q0Um21N4o&html=&pos=1&folt=cit", "author": ["Hong Jin Kang"], "ref": ["2 new citations to articles by Hong Jin Kang"]}
{"title": "PR2: Peephole Raw Pointer Rewriting with LLMs for Translating C to Safer Rust", "first_label": ["LLM"], "second_label": [], "data": "Y Gao, C Wang, P Huang, X Liu, M Zheng, X Zhang\\xc2\\xa0- arXiv preprint arXiv:2505.04852, 2025\nThere has been a growing interest in translating C code to Rust due to Rust's robust \nmemory and thread safety guarantees. Tools such as C2RUST enable syntax-guided \ntranspilation from C to semantically equivalent Rust code. However, the resulting \nRust programs often rely heavily on unsafe constructs--particularly raw pointers--\nwhich undermines Rust's safety guarantees. This paper aims to improve the memory \nsafety of Rust programs generated by C2RUST by eliminating raw pointers\\xc2\\xa0\\xe2\\x80\\xa6\n\\xe2\\x80\\xa2\nCites: \\xe2\\x80\\xaaAutoCodeRover: Autonomous program improvement\\xe2\\x80\\xac", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2505.04852&hl=en&sa=X&d=11999478587513115260&ei=xPsgaPmpAZCk6rQPifv7-Aw&scisig=AAZF9b9NPZBx64E-LuPzj2OOnqva&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=0&folt=cit", "author": [], "ref": ["5 new citations to articles by Abhik Roychoudhury"]}
{"title": "Testing Message-Passing Concurrency", "first_label": ["Software Testing"], "second_label": [], "data": "Z Shi, L M\\xc3\\x98ldrup, U Mathur, A Pavlogiannis\\xc2\\xa0- arXiv preprint arXiv:2505.05162, 2025\nA key computational question underpinning the automated testing and verification of \nconcurrent programs is the\\\\emph {consistency question}--\\\\emph {given a partial \nexecution history, can it be completed in a consistent manner?} Due to its \nimportance, consistency testing has been studied extensively for memory models, as \nwell as for database isolation levels. A common theme in all these settings is the use \nof shared-memory as the primal mode of interthread communication. On the other\\xc2\\xa0\\xe2\\x80\\xa6\n\\xe2\\x80\\xa2\nCites: \\xe2\\x80\\xaaGreybox Fuzzing for Concurrency Testing\\xe2\\x80\\xac", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2505.05162&hl=en&sa=X&d=7935776494190835379&ei=xPsgaPmpAZCk6rQPifv7-Aw&scisig=AAZF9b-nj7Z-UVh15cIq2WASgMZZ&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=1&folt=cit", "author": [], "ref": ["5 new citations to articles by Abhik Roychoudhury"]}
{"title": "On Evaluating Fuzzers with Context-Sensitive Fuzzed Inputs: A Case Study on PKCS# 1-v1. 5", "first_label": ["Fuzzing"], "second_label": [], "data": "SM Hasan, P Kozyreva, E Hoque\nCryptographic standards like the PKCS# 1-v1. 5 signature scheme for RSA are \nessential for secure digital communications, yet cryptographic libraries remain \nvulnerable. Fuzzing, a security testing technique, often struggles to detect \nmemorysafety bugs in these libraries due to the need for context-sensitive inputs\\xe2\\x80\\x94\nthose with complex semantic relationships between their fields. This paper presents \na preliminary study that evaluates 7 fuzzers for their ability to generate such inputs\\xc2\\xa0\\xe2\\x80\\xa6\n\\xe2\\x80\\xa2\nCites: \\xe2\\x80\\xaaSmart greybox fuzzing\\xe2\\x80\\xac", "link": "https://scholar.google.com/scholar_url?url=https://endadul.github.io/pubs/csfuzz-sbft2025.pdf&hl=en&sa=X&d=4574322033057594488&ei=xPsgaPmpAZCk6rQPifv7-Aw&scisig=AAZF9b9NYuoZULqDIOlP6Gh73KyK&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=3&folt=cit", "author": [], "ref": ["5 new citations to articles by Abhik Roychoudhury"]}
{"title": "Securing Smart Contracts Against Business Logic Flaws", "first_label": ["Smart Contracts"], "second_label": [], "data": "M Eshghie - 2025\nBlockchain smart contracts empower decentralized applications (DApps) by enabling \ntrustless, transparent, and immutable transactions. However, this immutability means \nthat flaws in design or implementation lead to irreversible and costly security \nbreaches. Therefore, rigorous verification and analysis of smart contracts before \ndeployment is crucial. Furthermore, since not all vulnerabilities are detectable pre-\ndeployment, monitoring after deployment is equally critical. One particularly\\xc2\\xa0\\xe2\\x80\\xa6\n\\xe2\\x80\\xa2\nCites: \\xe2\\x80\\xaaSmart Contract Repair\\xe2\\x80\\xac\u00a0\u00a0\n\u00a0\nThis message was sent by Google Scholar because you\\'re following new citations to articles written by \nAbhik Roychoudhury\n.\nList alerts\nCancel alert\n\\r\\n'", "link": "https://scholar.google.com/scholar_url?url=https://www.diva-portal.org/smash/record.jsf%3Fpid%3Ddiva2:1956747&hl=en&sa=X&d=3416347840003093938&ei=xPsgaPmpAZCk6rQPifv7-Aw&scisig=AAZF9b9lxMDM4RACe-jku_-EsT1-&oi=scholaralrt&hist=ylyK0_8AAAAJ:10071049626428824134:AAZF9b8j6D2HAFt59uW8wFlKdfsL&html=&pos=4&folt=cit", "author": [], "ref": ["5 new citations to articles by Abhik Roychoudhury"]}
{"title": "Towards Mitigating API Hallucination in Code Generated by LLMs with Hierarchical Dependency Aware", "first_label": ["LLM", "Code"], "second_label": [], "data": "Y Chen, M Chen, C Gao, Z Jiang, Z Li, Y Ma\\xc2\\xa0- arXiv preprint arXiv:2505.05057, 2025\nApplication Programming Interfaces (APIs) are crucial in modern software \ndevelopment. Large Language Models (LLMs) assist in automated code generation \nbut often struggle with API hallucination, including invoking non-existent APIs and\\xc2\\xa0\\xe2\\x80\\xa6\n\u00a0\nThis message was sent by Google Scholar because you\\'re following new articles related to research by \nDavid Lo\n.\nList alerts\nCancel alert\n\\r\\n'", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2505.05057&hl=en&sa=X&d=6036141643563807356&ei=w_sgaKn2POG_6rQP0ufy2AQ&scisig=AAZF9b_R0KaC6R0SQDEOJNgHZQje&oi=scholaralrt&hist=ylyK0_8AAAAJ:5865787842749446205:AAZF9b9CiGf-firBvlixUlAEJTz9&html=&pos=2&folt=rel", "author": ["David Lo"], "ref": ["David Lo - new related research"]}
{"title": "Can Long-Context Language Models Solve Repository-Level Code Generation?", "first_label": ["Code"], "second_label": ["Generation"], "data": "Y PENG, ZZ Wang, D Fried\\xc2\\xa0- LTI Student Research Symposium 2025\nWith the advance of real-world tasks that necessitate increasingly long contexts, \nrecent language models (LMs) have begun to support longer context windows. One \nparticularly complex task is repository-level code generation, where retrieval\\xc2\\xa0\\xe2\\x80\\xa6", "link": "https://scholar.google.com/scholar_url?url=https://openreview.net/pdf%3Fid%3DpmcWo9DtDw&hl=en&sa=X&d=13063763947226413069&ei=w_sgaKPBOIKwieoP1bHc0Q8&scisig=AAZF9b9atphr1WTCjx4gTyjUat33&oi=scholaralrt&hist=ylyK0_8AAAAJ:4812769200119993430:AAZF9b_1MT--9phVV-34dqGZeQFI&html=&pos=0&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - new related research"]}
