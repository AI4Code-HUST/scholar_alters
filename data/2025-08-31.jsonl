{"title": "LLM-based Generation of Formal Specification for Run-time Security Monitoring of ICS", "first_label": ["LLM"], "second_label": ["Generation"], "data": "GE Raptis, MT Khan, C Koulamas, D Serpanos- 2025 IEEE International Conference, 2025\nIndustrial Control Systems (ICS) are vulnerable to cybersecurity threats due to their \ndistributed architecture and critical role in infrastructure sectors. Ensuring their \nsecure operation requires deploying runtime monitoring mechanisms to detect \nbehavioral deviations, with inline security monitoring arising as a practical solution. \nHowever, writing these specifications manually is time-consuming, error-prone, and \nrequires deep domain expertise. In this paper, we explore the feasibility of using\nTrch dn: Can LLMs Reason About Program Semantics? A Comprehensive", "link": "https://scholar.google.com/scholar_url?url=https://ieeexplore.ieee.org/abstract/document/11130130/&hl=vi&sa=X&d=1833485915756417544&ei=iPGzaMO5JvnSieoPxKLpgQ0&scisig=AAZF9b8rc8dksCWHyDLd6ykXBOlH&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=0&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["5 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
{"title": "An AI-powered pipeline for enabling Self-Healing in Software Systems", "first_label": [], "second_label": [], "data": "G Siachamis, G Papadopoulos, AL Symeonidis- 2025 IEEE International Conference, 2025\nThe continuous digitisation of all types of data and business information, although \nundoubtedly beneficial, has triggered an exponential rise to security risks, as more \nattack vectors are introduced at a high frequency. To facilitate the process of \nsuppressing security threats to software, we present an AI-powered pipeline that \nenables developers to mitigate security alerts identified by security assessment \nreports generated by popular open source security tools. The proposed pipeline\nTrch dn: Comparison of static application security testing tools and large", "link": "https://scholar.google.com/scholar_url?url=https://ieeexplore.ieee.org/abstract/document/11130137/&hl=vi&sa=X&d=9966959413278561935&ei=iPGzaMO5JvnSieoPxKLpgQ0&scisig=AAZF9b_iZKpa5ZeT4pmQniUd477v&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=1&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["5 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
{"title": "Evaluation of the Code Generated By Large Language Models: The State of the Art", "first_label": ["LLM", "Code"], "second_label": [], "data": "Z Ying, D Towey, Y Zhang- 2025 IEEE 49th Annual Computers, Software, and, 2025\nThe rapid development of Large Language Models (LLMs), such as ChatGPT and \nDeepSeek, has revolutionized software development, particularly in the domain of \nautomated code generation. These models, built on architectures like the \nTransformer, have demonstrated remarkable capabilities in generating human-like \ntext and source code, significantly enhancing developer productivity and reducing \ndevelopment time. However, the widespread adoption of LLMs for code generation\nTrch dn: Refining chatgpt-generated code: Characterizing and mitigating", "link": "https://scholar.google.com/scholar_url?url=https://ieeexplore.ieee.org/abstract/document/11126696/&hl=vi&sa=X&d=12484343861239898882&ei=iPGzaMO5JvnSieoPxKLpgQ0&scisig=AAZF9b_7wjcMe67kD6SY7gom0tNW&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=2&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["5 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
{"title": "VFProber: A Vulnerability-Fixing Identification Framework Based on Code Changes and Semantic Adjustment", "first_label": ["Vulnerabilities", "Code", "Code Change"], "second_label": [], "data": "J Dong, G Fan, Y Yu, Y Liang, Y Ye, H Yu, W Chen- 2025 IEEE 49th Annual, 2025\nWith the accelerated development of software, developers face the continuous \nchallenge of fixing vulnerabilities but vulnerability-fixing commits often disassociated \nfrom the vulnerabilities, and the structural and semantic differences between code \nchanges and natural language present significant challenges in identifying these \ncommits. Existing approaches utilize machine learning and deep learning \ntechniques to address this problem, but they often do not fully leverage the\nTrch dn: Multi-Granularity Detector for Vulnerability Fixes", "link": "https://scholar.google.com/scholar_url?url=https://ieeexplore.ieee.org/abstract/document/11126599/&hl=vi&sa=X&d=10091484810073408440&ei=iPGzaMO5JvnSieoPxKLpgQ0&scisig=AAZF9b_ERuwIhuYdUW8lIULXjpL1&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=3&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["5 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
{"title": "Research Directions in Software Supply Chain Security", "first_label": [], "second_label": ["Search"], "data": "I RAHMAN, M TAMANNA, G TYSTAHL, N ZAHAN - 2025\nThe modern world relies on digital innovation in almost every human endeavor, \nincluding critical infrastructure. Digital innovation has accelerated substantially as \nsoftware is increasingly built with layers of reusable abstractions, including libraries, \nframeworks, cloud infrastructure, and AI modules. This style of software development \nis considered a software supply chain where software projects depend on and build \nupon other software projects. Based upon its analysis of 1,067 commercial code\nTrch dn: VulCurator: A Vulnerability-Fixing Commit Detector\u00a0\u00a0\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng li trch dn mi trong cc bi vit ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://www.kapravelos.com/publications/tosem-directions.pdf&hl=vi&sa=X&d=15468523295392098242&ei=iPGzaMO5JvnSieoPxKLpgQ0&scisig=AAZF9b9TufW503PQh-LPbCpZV45e&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=4&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["5 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
{"title": "Does AI Code Review Lead to Code Changes? A Case Study of GitHub Actions", "first_label": ["Code Review", "Code", "Code Change"], "second_label": [], "data": "K Sun, H Kuang, S Baltes, X Zhou, H Zhang, X Ma- arXiv preprint arXiv, 2025\nAI-based code review tools automatically review and comment on pull requests to \nimprove code quality. Despite their growing presence, little is known about their \nactual impact. We present a large-scale empirical study of 16 popular AI-based code", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2508.18771&hl=vi&sa=X&d=1087042547895093020&ei=iPGzaKeQGZ6s6rQPxqLhuQI&scisig=AAZF9b8tPdgA8_g47l6rpQckHRi_&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=0&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Automated Bug Frame Retrieval from Gameplay Videos Using Vision-Language Models", "first_label": ["LLM", "Bug"], "second_label": [], "data": "W Lu, A Senchenko, A Hindle, CP Bezemer- arXiv preprint arXiv:2508.04895, 2025\nModern game studios deliver new builds and patches at a rapid pace, generating \nthousands of bug reports, many of which embed gameplay videos. To verify and \ntriage these bug reports, developers must watch the submitted videos. This manual", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2508.04895&hl=vi&sa=X&d=11413311830969918411&ei=iPGzaKeQGZ6s6rQPxqLhuQI&scisig=AAZF9b-NCiqpLdz5tIxck1-Y0eW_&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=1&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "SIExVulTS: Sensitive Information Exposure Vulnerability Detection System using Transformer Models and Static Analysis", "first_label": ["Vulnerabilities", "Static Analysis"], "second_label": ["Detection"], "data": "K Katz, S Moshtari, I Mujhid, M Mirakhorli, D Garcia- arXiv preprint arXiv:2508.19472, 2025\nSensitive Information Exposure (SIEx) vulnerabilities (CWE-200) remain a persistent \nand under-addressed threat across software systems, often leading to serious \nsecurity breaches. Existing detection tools rarely target the diverse subcategories of", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2508.19472&hl=vi&sa=X&d=7796505405812517065&ei=iPGzaKeQGZ6s6rQPxqLhuQI&scisig=AAZF9b_N_o9MHRnErNEAJe_2k9p9&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=2&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Prompting Matters: Assessing the Effect of Prompting Techniques on LLM-Generated Class Code", "first_label": ["LLM", "Code"], "second_label": [], "data": "A Yuen, J Pangas, MMH Polash, A Abdellatif\nThe field of software engineering and coding has undergone a significant \ntransformation. The integration of large language models (LLMs), such as ChatGPT, \ninto software development workflows is changing how developers at all skill levels\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng bi vit mi lin quan n nghin cu ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://www.researchgate.net/profile/Ahmad-Abdellatif-2/publication/394255549_Prompting_Matters_Assessing_the_Effect_of_Prompting_Techniques_on_LLM-Generated_Class_Code/links/688f775d86911c11bfed27c8/Prompting-Matters-Assessing-the-Effect-of-Prompting-Techniques-on-LLM-Generated-Class-Code.pdf&hl=vi&sa=X&d=1370100941342347490&ei=iPGzaKeQGZ6s6rQPxqLhuQI&scisig=AAZF9b8Vnec2OY49V3WcHZYAdXYP&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=3&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "From Benchmark Data To Applicable Program Repair: An Experience Report", "first_label": ["APR"], "second_label": ["Repair"], "data": "M Chandramohan, J Jancic, Y Zhang, P Krishnan- arXiv preprint arXiv:2508.16071, 2025\nThis paper describes our approach to automated program repair. We combine \nvarious techniques from the literature to achieve this. Our experiments show that our \napproach performs better than other techniques on standard benchmarks. However, \non closer inspection, none of these techniques work on realistic defects that we see \nin industry. We find that augmenting code with formal specifications enables LLMs to \ngenerate higher-quality unit tests, especially for complex production code with\nTrch dn: Can LLMs Reason About Program Semantics? A Comprehensive\u00a0\u00a0\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng li trch dn mi trong cc bi vit ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2508.16071&hl=vi&sa=X&d=16691398228959949979&ei=2PqxaJ_3BY6IieoP0sKRuAk&scisig=AAZF9b9GaIV6P3izHEpHI7eG2pKc&oi=scholaralrt&hist=70gU4M0AAAAJ:6246953642887790424:AAZF9b-KfaIzNELg_AxYHyYLV6lH&html=&pos=0&folt=cit", "author": ["Thanh Le-Cong"], "ref": ["1 l\u1eddi tr\u00edch d\u1eabn m\u1edbi \u0111\u1ebfn b\u00e0i vi\u1ebft c\u1ee7a Thanh Le-Cong"]}
{"title": "How Small is Enough? Empirical Evidence of Quantized Small Language Models for Automated Program Repair", "first_label": ["APR", "LLM"], "second_label": ["Repair"], "data": "K Kusama, H Shu, M Kondo, Y Kamei- arXiv preprint arXiv:2508.16499, 2025\nBackground: Large language models (LLMs) have greatly improved the accuracy of \nautomated program repair (APR) methods. However, LLMs are constrained by high \ncomputational resource requirements. Aims: We focus on small language models", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2508.16499&hl=vi&sa=X&d=14761844900561780683&ei=1_qxaIWtOPnSieoPxKLpgQ0&scisig=AAZF9b8CSGj9e1LOa-aXkTI7Gj4R&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=0&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Enhancing Automated Program Repair using Patch Lightweighting and Context Information", "first_label": ["APR"], "second_label": ["Repair"], "data": "- Journal of KIISE, 2025\n       (LLM)     . \n     LLM          \nLLM", "link": "https://scholar.google.com/scholar_url?url=https://www.dbpia.co.kr/Journal/articleDetail%3FnodeId%3DNODE12316323&hl=vi&sa=X&d=13270709171675436565&ei=1_qxaIWtOPnSieoPxKLpgQ0&scisig=AAZF9b8hUWWUe-tgX_nDP3LoBjn1&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=1&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "The Fools are Certain; the Wise are Doubtful: Exploring LLM Confidence in Code Completion", "first_label": ["LLM", "Code"], "second_label": ["Generation"], "data": "Z Kotti, K Dritsa, D Spinellis, P Louridas- arXiv preprint arXiv:2508.16131, 2025\nCode completion entails the task of providing missing tokens given a surrounding \ncontext. It can boost developer productivity while providing a powerful code \ndiscovery tool. Following the Large Language Model (LLM) wave, code completion", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2508.16131&hl=vi&sa=X&d=15784970407530314856&ei=1_qxaIWtOPnSieoPxKLpgQ0&scisig=AAZF9b83BfJle9mE77h-yG8Vk21V&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=2&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
{"title": "Data and Context Matter: Towards Generalizing AI-based Software Vulnerability Detection", "first_label": ["Vulnerabilities"], "second_label": ["Detection"], "data": "R Safdar, D Mateen, ST Ali, MU Ashfaq, W Hussain- arXiv preprint arXiv:2508.16625, 2025\nThe performance of AI-based software vulnerability detection systems is often limited \nby their poor generalization to unknown codebases. In this research, we explore the \nimpact of data quality and model architecture on the generalizability of vulnerability\n\u00a0\nGoogle Scholar gi thng bo ny cho bn v bn ang theo di nhng bi vit mi lin quan n nghin cu ca \nThanh Le-Cong\n.\nLit k cnh bo\nHy thng bo", "link": "https://scholar.google.com/scholar_url?url=https://arxiv.org/pdf/2508.16625&hl=vi&sa=X&d=2253023752018323519&ei=1_qxaIWtOPnSieoPxKLpgQ0&scisig=AAZF9b9I4jVTS5hn1--0lMyKucye&oi=scholaralrt&hist=70gU4M0AAAAJ:5337116523931328826:AAZF9b-46FvMQTpOKclK0XMbpLrW&html=&pos=3&folt=rel", "author": ["Thanh Le-Cong"], "ref": ["Thanh Le-Cong - nghi\u00ean c\u1ee9u li\u00ean quan m\u1edbi"]}
